# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime


class SyncToRequest(pydantic.BaseModel):
    src: str
    dest: str
    target_format: str = pydantic.Field(alias="targetFormat")
    include: str
    exclude: str
    transform_tags: typing.Optional[bool] = pydantic.Field(
        alias="transformTags", description=("transform dot delimited tags to '/' delimited tags\n")
    )
    delete_missing: typing.Optional[bool] = pydantic.Field(
        alias="deleteMissing", description=("should delete files that are not present in dest. default is false\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
